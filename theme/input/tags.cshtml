ArchiveSources: => GetString("PostSources")
ArchiveFilter: => GetBool("IsPost")
ArchiveKey: Tags
ArchiveKeyComparer: => StringComparer.OrdinalIgnoreCase.ToConvertingEqualityComparer()
ArchiveDestination: >
  => GetInt("Index") <= 1 ? $"tags/{GetString("GroupKey")}.html" : $"tags/{GetString("GroupKey")}/{GetInt("Index")}.html"
ArchivePageSize: 10
ArchiveOrderKey: Published
ArchiveOrderDescending: true
Title: Tags
ArchiveTitle: => GetString("GroupKey")
---
@if (Document.ContainsKey(Keys.GroupKey))
{
    @Html.Partial("/_posts.cshtml", Document)
            <!-- tagの表示がサイドに二つになるので、このページのサイドのタグ一覧は消す
    <div class="container-sm-height">
        <div class="row row-sm-height">
            <div class="col-md-6 right-border col-sm-height">
                @Html.Partial("/_posts.cshtml", Document)
            </div>
            <div class="col-md-4 mt-4 mt-md-0 col-sm-height">
                @foreach (IDocument tag in OutputPages.Get("tags.html").GetChildren().OrderByDescending(x => x.GetChildren().Count()))
                {
                    string badgeStyle = Document.GetString(Keys.GroupKey).Equals(tag.GetTitle(), StringComparison.OrdinalIgnoreCase) ? "badge-dark" : "badge-light";
                    string postCount = tag.GetChildren().Count().ToString();
                    <a href="@Context.GetLink(tag)" class="badge @badgeStyle"> @tag.GetTitle() (@postCount)</a>
                }
            </div>
        </div>
    </div>
                -->

}
else
{ 
    @foreach (IDocument tag in Document.GetChildren().OrderByDescending(x => x.GetChildren().Count()))
    {
        string postCount = tag.GetChildren().Count().ToString();
        <a role="button" href="@Context.GetLink(tag)" class="badge badge-light"> @tag.GetTitle() (@postCount)</a>
    }
}